TASK1:
SQL Commands to Create and Populate the Table
CREATE TABLE Empl (
    empno INT,
    ename VARCHAR(50),
    job VARCHAR(50),
    mgr INT,
    hiredate DATE,
    sal DECIMAL(10, 2),
    comm DECIMAL(10, 2),
    deptno INT
);

INSERT INTO Empl (empno, ename, job, mgr, hiredate, sal, comm, deptno) VALUES
(8369, 'SMITH', 'CLERK', 8902, '1990-12-18', 800.00, NULL, 20),
(8499, 'ANYA', 'SALESMAN', 8698, '1991-02-20', 1600.00, 300.00, 30),
(8521, 'SETH', 'SALESMAN', 8698, '1991-02-22', 1250.00, 500.00, 30),
(8566, 'MAHADEVAN', 'MANAGER', 8839, '1991-04-02', 2985.00, NULL, 20),
(8654, 'MOMIN', 'SALESMAN', 8698, '1991-09-28', 1250.00, 1400.00, 30),
(8890, 'BINA', 'MANAGER', 8839, '1991-05-01', 2850.00, NULL, 30),
(8882, 'SHIVANSH', 'MANAGER', 8566, '1991-06-09', 2450.00, NULL, 10),
(8888, 'SCOTT', 'ANALYST', 8566, '1992-12-09', 3000.00, NULL, 20),
(8839, 'AMIR', 'PRESIDENT', NULL, '1991-11-08', 5000.00, NULL, 20),
(8844, 'KULDEEP', 'SALESMAN', 8698, '1991-09-08', 1500.00, NULL, 30);
Queries
A. Display EName and Sal of employees whose salary are greater than or equal to 2200
SELECT ename, sal
FROM Empl
WHERE sal >= 2200;
B. Display details of employees who are not getting commission
SELECT *
FROM Empl
WHERE comm IS NULL;
C. Display employee name and salary of those employees who don’t have their salary in the range of 2500 to 4000
SELECT ename, sal
FROM Empl
WHERE sal NOT BETWEEN 2500 AND 4000;
D. Display the name, job title and salary of employees who don’t have a manager
SELECT ename, job, sal
FROM Empl
WHERE mgr IS NULL;
E. Display the name of an employee whose name contains “A” as third alphabet
SELECT ename
FROM Empl
WHERE ename LIKE '__A%';
F. Display the name of an employee whose name contains “T” as the last alphabet
SELECT ename
FROM Empl
WHERE ename LIKE '%T';


TASK2:
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class JDBCInsertExample {
    public static void main(String[] args) {
        // Database credentials
        String jdbcURL = "jdbc:mysql://localhost:3306/your_database";
        String username = "your_username";
        String password = "your_password";

        // SQL Insert query
        String sql = "INSERT INTO Employee (empcode, empname, empage, esalary) VALUES (?, ?, ?, ?)";

        try {
            // Establishing a connection
            Connection connection = DriverManager.getConnection(jdbcURL, username, password);

            // Creating a PreparedStatement object
            PreparedStatement statement = connection.prepareStatement(sql);

            // Inserting data
            insertEmployee(statement, 101, "Jenny", 25, 10000);
            insertEmployee(statement, 102, "Jacky", 30, 20000);
            insertEmployee(statement, 103, "Joe", 20, 40000);
            insertEmployee(statement, 104, "John", 40, 80000);
            insertEmployee(statement, 105, "Shameer", 25, 90000);

            // Closing the connection
            statement.close();
            connection.close();

            System.out.println("Data inserted successfully.");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Helper method to insert employee data
    private static void insertEmployee(PreparedStatement statement, int empcode, String empname, int empage, int esalary) throws SQLException {
        statement.setInt(1, empcode);
        statement.setString(2, empname);
        statement.setInt(3, empage);
        statement.setInt(4, esalary);
        statement.executeUpdate();
    }
}
Steps to Run the Program
Create the Employee Table:

Before running the program, create the Employee table in your MySQL database:
CREATE TABLE Employee (
    empcode INT PRIMARY KEY,
    empname VARCHAR(50),
    empage INT,
    esalary INT
);
Setup JDBC Driver:

Ensure you have the MySQL JDBC driver (mysql-connector-java-x.x.xx.jar) in your classpath. You can download it from here.

Update Database Credentials:

Replace your_database, your_username, and your_password in the jdbcURL, username, and password variables with your actual MySQL database name, username, and password.

Compile and Run the Program:

Compile the Java program:
javac JDBCInsertExample.java

Run the Java program:
java JDBCInsertExample
